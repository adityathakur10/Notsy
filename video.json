{
    "message": "Processed 3/3 URLs successfully",
    "data": {
        "type": "video",
        "source": [
            "https://www.youtube.com/watch?v=YCS3HsFTbTQ",
            "https://www.youtube.com/watch?v=DQtkOTThq5g",
            "https://www.youtube.com/watch?v=Hm0DZtiKUI8"
        ],
        "content": [
            "i mean the biggest one is build right And the the easiest way to build is to pick things that you will care enough to\ncomplete If you build an app that is is useful to you and solves a real problem\nyou've just built your portfolio and you're proving that you can solve real problems with code which is exactly what\na company like IBM wants to see Welcome back to the Free Code Camp podcast your\nsource for raw unedited interviews with developers Today we're talking with Jason Langorf He learned how to program\nout of necessity by building websites for local emo bands He dropped out of\ncollege but eventually worked as an engineer at IBM and has gone on to roles at many other companies including\nsoftware architecture management and everything in between He now runs Code TV a Bravo style reality TV channel for\ndevelopers Support for this podcast comes from a grant from Wix Studio Wix\nStudio provides developers tools to rapidly build websites with everything out of the box then extend replace and\nbreak boundaries with code Learn more at wixstudio.com Support also comes from the\n11,384 kind folks who support Free Code Camp through a monthly donation You can join these chill human beings and help\nour charity's mission by going to donate.freecodecamp.org For this week's musical intro with yours\ntruly on drums guitar bass and keys we're going back to 1990 with the Game Boy classic The Amazing\nSpider-Man Heat Heat\nJason Langdorf welcome to the show Thank you so much for having me I'm so excited to be here Awesome I've really enjoyed\nwatching Code TV recently uh your kind of like Bravo style reality TV show for\ndevelopers And I wanted to ask you like I heard a rumor that you had written a\nwhole lot of custom software to produce that So you could kind of like have this like elaborate producer type room\nexperience Like you watch these like TV shows about network television and there's like this jig giant room and\nthere are all these people like staring at monitors and pressing buttons on a big control panel And like my understanding is you automated a lot of\nthat for your channel Yeah Automated and and also made it um made it so that I\ncould kind of multitask and and control a lot of it at the same time So if you watch any of the episodes of Elite Heat\nthat have come out on Code TV you'll see that I'm kind of sitting at a desk and I've got a couple computers open The way\nthat that's working is it's a um it is a multi-creen realtime state machine that\nI've put together where uh Mark the host is holding a a tablet in his hand and\nthen we've got the the TV behind him which is showing the questions to the contestants and then each of the the\npodiums for the contestants have a little screen in them that has their name and what their score is what their current spice level is And then I need\nto be able to control like who's got points what's uh you know what's the spice level I need to be able to choose\nquestions and categories and all that stuff And so it all of that is connected as one big app that's running as a kind\nof a multi-creen thing that I built using it's uh convex as my database because it's got a real-time piece built\ninto it And then I use XATE which is a state machine library which um state\nmachines are kind of a way of of turning flowcharts into logic in code which is really really nice when you've got\nsomething that complex Yeah Um but that allows me as I'm as the game show is running when somebody spins the wheel I\nhit the button for the category and that updates everything at once When somebody's get a question right I get to hit the button that they got it right\nand that updates their score and changes the question and updates what Mark sees on his tablet so he knows what the line\nis or what the answer is Um so it helps us uh helps us kind of keep everything flowing without having qards or a lot of\nautomation It uh it's just enough automation to to allow us to be flexible That's awesome So like how many people\nare actually like in the proverbial control room when the show's going on Is it for the for the score part It's just\nme Um but we have a crew of 12 people that keep the show running\nUm in addition to the the on-screen folks Okay So like that might be like producers that are like getting the\nguests coordinating all that Yeah So we have like you know like Annie Ston is the producer who is in charge of of like\nshe's the one running food out and making sure people are taking their spicy bites And then we've got uh our camera operators We've got our sound\nperson We've got somebody doing makeup We've got somebody who uh they're called the gaffer They run the lights Um we've\ngot somebody who's kind of on stage doing whatever needs to be done They're called the production assistant Um so there's there's people running all over\nuh making sure that the the wheels stay on as we go Awesome And and the name of the show is Leit Heat like elite being\nlike a short form of elite like le code kind of yeah like uh le e t heat So the\nthe goal the original idea was like the the joke that we made was let's put these developers through the worst tech\ninterview of their lives So if they get answers wrong they have to eat spicy bites and every time it's\nwrong the spice level gets higher So it's very um it's you know webdev trivia a lot of a lot of knowledge a lot of fun\nbecause we we jump between a bunch of categories and also you get to see you know whether or not a developer you've\nseen on Twitter can handle a very very spicy hot sauce Yeah Yeah Well uh I mean\nlike hot sauce is no joke Uh my brother made the mistake Uh we call it a mistake because if you do it more than once it's\nif you do it once it's a mistake but if you do it twice it's it's it's a tradition And uh my brother decided to\nget like this Hot Ones box with all the Oh yeah sauce And some of them tasted really good And once you get really high\nyou can't really taste anything You just like once you get to the 10th one Yeah\nUm so I I I have a little bit of experience with hot sauce Uh and uh of\ncourse like I can only imagine how that changes that anime because like it was like getting slapped in the face or\nsomething It's just like whoa what's going on It it is pretty funny when somebody gets a high enough spice level\nyou can sort of see they they start to like dissociate and so you can you can see\nthat like they think they have an internal monologue but they're just sort of like chattering and then we start asking them\ntech questions So it's it's a lot of fun Yeah And like a lot of questions about databases a lot of questions about like\naccessibility Yeah Um like a lot of front-end development and then also a lot of like architecture like DevOps\ntype questions We wanted to hit real full stack right And and the goal for that is that nobody knows all of this\nstuff right And it's not fun to watch a show where everybody gets every answer right So we wanted to put the devs in a position where if you are a CSS\naccessibility front-end specialist you're going to have a great time in those categories And then when we get to\nauthentication maybe you're cooked Um and vice versa for somebody who's very like strong in the back end when we get\ninto the accessibility questions they probably don't know a lot of those answers So it's a a good reminder that\nno matter how much of an expert you are webdev is a big place and there's probably a lot of stuff still to learn\nAnd um we'll take you know we've got folks who are accessibility leads at Google and um and you know like some of\nthe folks were super the senior engineers at Netflix and they're still you know they're killing it in the categories that they're experts in and\nthen they end up eating a lot of hot sauce in the categories that they're not Nice Yeah Uh I mean I guess that's\nalways been the case with like Jeopardy and stuff like that Like there's always been like the historian on there the\nhistory professor who's got like this great knowledge of like world history and stuff like that but the moment that it's like sports they're just like \"Uh\noh.\" Yeah Yeah You can't know everything So it's it's fun to find out where the edges of your knowledge are Yeah Well I\nwant to talk about those edges of knowledge a little bit because you have a very non-traditional path into tech Uh\nmy understanding is you did not finish college You like dropped out after like a semester or something like that I did\nYeah And yet you've worked in like hardcore you know engineering type roles at like big tech companies like IBM Uh\nyou you worked in a lot of different roles at Netlefi which is one of the big kind of like tech infrastructure\nstartups uh to emerge over the past 10 12 years Uh so so you've kind of like\nrun the gamut and and you've worked like a ton of different types of roles in\ntech Yeah Um so I I mean I got my started out of necessity I was a musician and we\ndidn't have we didn't have any money We weren't a very good band but we were touring constantly but so we needed merch We\nneeded tour posters We needed a website We needed to be able to post our music online We had a MySpace page that we\nwanted to customize And we didn't have money to hire somebody So I just decided I'd figure it out And I I sat down I\nstarted kind of tinkering and started to get my get a feel for how it worked And it was fun for me So I just I was like \"Well maybe I could make it so that the\nband could make tour updates.\" And I learned PHP and my SQL and and I was like \"Maybe I could figure out how to like post our music in a way nobody\ncould download.\" So I learned Flash and Action Action Script And then I I just kind of kept going And I probably\nrebuilt that band website 14 15 times because it gave me something to do in you know we had eight hour drives\nbetween shows So I just sit and tinker on the in the van And um when the band broke up I just I kind of looked around\nI was like \"Oh my god wait I built an entire skill set.\" I was basically running an agency with a single client\nwhich was my band I'd learned how to design I learned how to book tours I learned how to haggle and negotiate and\ndo sales I was like \"Oh wait I think I actually learned a skill set here.\" Um and so then I was able to to take that\nand I ran an agency for a really long time I burned out super hard there And then I ended up working at IBM I worked\nat nightly I worked at Gatsby and now I'm out on my own doing my my thing at Code TV\nTalk about agency life a little bit because like a lot of people may not understand what exactly that entails and\nhow the skill sets from being like an abandoned basically also being kind of like the de facto touring manager just\nbecause uh like you know lack of money is the mother of all in this uh\ninnovation Right Right Yeah I mean I so I when the band broke up I started\ntaking some client work I had a friend who was a personal trainer and I built him a website and that kind of got me on\nthe map with some other folks who are personal trainers who was like \"Hey could you do one of those for me?\" And so I was able to do a little bit of work\nand I what I thought was I was going to do this a little bit and then I was going to take a full-time job And then I\nstarted talking to a company in Montana where I was I was living at the time and I they were like \"Yeah we'll hire you as\na a web designer Um the the max salary or you will we'll hire you at $30,000 a\nyear.\" And this was in 2007 so it wasn't like it wasn't nothing Montana the cost\nof living in Montana is pretty low but it also wasn't very high It it felt like a it felt like a not a lot of money And\nI was like \"Okay can I can I do better than that?\" I asked them I was like \"What's the ceiling Like if I stay here and I get raises like what's the highest\nI could go?\" And they said 36 I was like \"That just doesn't feel like a lot of room to grow.\" And then I I at the same\ntime serendipitously one of my initial clients came back and they said \"Hey we've got this idea where we want to\nbuild a lot of websites for our clientele.\" They were a talent management company and we'll put you on\n$3,000 a month retainer if you will build the websites for these for our\ntalent And I said \"Okay that's $36,000 a year.\" And it was only a three-month\ncontract but I was like \"You know what I bet I can figure this out.\" And so I I decided to take a bet on myself And what\nit ended up being is when you when you do agency work there's the part that I\nknew about I knew I was going to be building websites but the part that I wasn't thinking about is that you're\nalso managing your own time You're also managing client expectations You're you're defining project scopes You're\nfiguring out how to make sure everybody's aligned on deliverables And then you're also in charge of things\nlike communication and you got to send check-in emails and set set deadlines and make sure that communication goes\nout if you're going to miss a deadline or if you're ahead of schedule Um and I had to go get new clients So now I'm in\nsales and I'm doing all of these different things And what was really similar between being in a band and\ndoing this agency work was the same thing is true if you're in a band You have to go get shows You have to talk to\nlike the high schoolers in that town to see if they'll hang up posters so that the kids will come to your show You have\nto make sure that the local radio gets a copy of your demo in case they want to play like here's a band coming to town\nAnd all of this was the same you know it's outreach it's organization it's setting deadlines I had to make sure the band showed up on time I had to work\nback from when we had to be loading in at the venue to like what time we had to leave in the morning and make sure that the van was fueled up and ready to go on\nthe road And so all of these logistical skills weren't onetoone translations but\nthey were pretty dang close to what I ended up doing when I was in the agency And so it felt like a pretty natural\nthing But the the unfortunate side of running an agency is that if you're not good at\nhiring or delegating you end up doing everything and you end up not having\ntime to do the things that you enjoy So the only thing I know knew how to hire for was other developers because that\nwas the thing I was good at And so I ended up hiring great contractor developers to do the dev and design work\nAnd then the only thing I got to do was sales and admin and management and invoicing and all the stuff that I\ndidn't really like because I didn't know how to hire help for those things And as a result I ended up really like hating\nthat job I I didn't enjoy I didn't get to do the parts I enjoyed I just got to watch other people have fun And then I\nwas doing all this work that was really not not what gives me energy right Like\nit's not the kind of work that when I do it I'm like \"Yeah let's do more.\" Um so I kind of found myself just you know\nalmost 10 years in just so burned out because I had been doing stuff that I didn't enjoy for the last six years and\nand yeah I was working 90our weeks Still hadn't figured out how to charge properly So I was you know I was maybe\nmaking 60 grand a year which was way better than the 36 I would have been kept at in that web agency job but for\nthe amount of work I was doing I was actually making less Like if I'd been working a 40hour week and making the\nequivalent amount of money I would have been making about 30 grand a year So the the trade-offs didn't feel right I felt\nlike I was offkilter and and it led to at one point I was so stressed out that like my beard started falling out in\nclumps like it turned white fell out I had bald patches for a few years Um and I had to to sort of work through that\nBut um yeah a like agency life is one of those things that it it will teach you how to delegate or it will get you out\nof agency life really really fast Yeah Uh well I I mean I I can relate to\na lot of this stuff because I do like our invoicing and like all our HR and like all that stuff just be just because\nlike I want I'm very proud uh you know we run a charity a 51c3 and we have to report like what proportion are we\nspending on like fundraising and administrative and stuff like that and it's really just me doing the fundraising and administrative and then\neverything else is programs right Uh and I'm I'm very proud of that efficiency but it does come with the cost of me\nhaving to sit down like yesterday was the first day of the month and and do like payroll and uh go through and like\nmake sure all the different transactions cleared and and double check all the the amounts and everything and yeah like um\nand and a whole bunch of other stuff like sending invoices like we're working with different organizations on courses\nthat they've provided grants to create like Linux Foundation and stuff like that and we have to you know uh like\ntrack like set deadlines do all All those things you you me you mentioned I mean that that kind of comes with being\nlike an entrepreneur and I guess it also comes with running an agency which is really just an entrepreneurship Yeah A different flavor of entrepreneurship\nYeah Because you're basically the the way I understand agency life is it's like being a freelance developer but\nyou've scaled up and now you have a layer beneath you of developers who are working and you're helping delegate\nYou're like the load balancer Exactly and and you know what I had thought I was doing was oh I'm going to have lots\nof clients and that means I'm going to be building all the time and and because I didn't know what I was getting into and because I didn't proactively find\npeople to handle the stuff that that I didn't want to do all the things I thought I would enjoy like the building\nended up being the only things I knew how to delegate So I I kind of accidentally built myself out of a job\nand ended up having a job I didn't want Yeah uh suffering from success is\nanother way to think about it Like you're you're you're just so efficient at delegating that like and you and finding good devs It's a good problem to\nhave but at the same time I'm not trying to trivialize the burnout that you felt Well yeah And it's it's definitely one of those things It's like it it teaches\nyou as you're as you're trying to build and grow something that you know the the hard like it's easy to delegate things\nyou understand and you know I know how to check the work of a developer because I could do that job but I don't really\nknow how to do accounting and so if I hire someone to do that work I don't have a good way of verifying whether or\nnot they've done a good job which makes me really nervous which makes me want to like well if I'm not going to know how to do it I might as well try to do it\nmyself which is absolutely the wrong instinct But that's the instinct I have as somebody who's always just figured\nthings out myself And and it just led to me being in this position of always being out of my depth And I think that I\nSarah Drazner who is a former boss of mine good friend and and now is the\nexecutive dire like senior director of web at Google like oversees a whole lot of the infrastructure of the web Um she\nonce said about burnout that burnout isn't because you work too many hours It's because you spent too much time in\nopposition of what your goals are And I think about work like that a lot And and\nit's why I burned out when I was in management It's why I burned out in the agency It's because what my heart wants\nis to be out there building stuff and sharing it That's what really gives me energy It's the thing that I get most\nexcited about And when I get myself into management or admin or owner roles if\nI'm not careful the the thing that ends up happening is I get to tell people about fun projects but I don't get to do\nthe fun project I'm not a builder anymore I'm a as you said like a kind of a flight controller a load balancer And\nthat isn't a bad job but it's not the right job for me And and because I wasn't proactively seeking the person\nwho could be the load balancer so that I could be the builder I found myself constantly doing work that I was wishing\nI was doing other work And I think that's the formula for burnout Yeah Well I'm thrilled that you didn't\nburn out uh and uh that you recognize the signs I mean like physically manifesting and having a patchy beard\nand stuff like that and probably feeling terrible all the time Uh I'm glad that you were able to recover because I I\nI've met lots of people who've gone into like a kind of like promo burn Yeah Scenario where they just they they go\nfarm goats essentially That's the old joke about software engineer What do you call a software engineer who just gets\none too many like you know uh vague stack traces or something like that Uh\nserver errors They just go phone quotes Um and yeah like I'm glad you're hanging in there and still fighting the good\nfight So at what point like so agency life not\nworking out for you Um like obviously as a lifestyle but it's working out It's successful Uh but you you want to do\nsomething else Walk us through like the progression from there I mean you mentioned Sarah Drazner She's a huge\nhero of mine Uh and I'm hoping to have her on the podcast in the future Uh yeah\nSo I uh in the agency this was 2014 2013 something like that I had\nstarted you know I was losing my hair I was I was barely sleeping I was working way too many hours And I realized that something needed to change So I told uh\nmy partners I I'd brought in this one developer that I've been working with constantly and I was like \"Listen I\nthink it's I think it's time Like I think I got to get out of this.\" And and I want to sell the agency and and he was\nwilling to purchase my interest and and when I say sell like I did not have an exit I was basically able to walk away\nfrom bills and that was what I wanted I I wanted to not h owe anything on this company and so that was what I ended up\ndoing Um I mean a lot of people would still list that as an exit to me that was a win like it was a huge win because\ncompany acquired 20 you know like through creative LinkedIn listing I\nprobably could have said that but um but to me the win was that I got my time back And so I I had one client that I\nreally liked and they wanted me to be their in-house R&D branch And so they offered me at the time the best contract\nI had ever seen It was it was $100,000 a year for me to go and be like internal\nR&D on contract for this company And it was also remote So I I was super burned\nout But I had actually like the way that I dealt with this at first is I just went to Alaska There was no phone service There was no internet Like it\ntook me 45 minutes to download a fishing license Like that's how good the connectivity was there And I just was\nlike off the grid I was on an island called uh it was off Thorn Bay which is\nit's not even accessible by road You have to take a sea plane to get there right I was out in the middle of nowhere And that disconnect helped me realize\nthat what I really wanted was to reconnect with this idea of just building stuff And so when I came back I\ntalked to this company and they they put me on this contract and I I was able to go spend a couple years um at the time\neverybody was calling it digital nomadism I I really don't like that term because I feel like it got co-opted by a\ncertain variety of of content creator that is not the type that I want to be associated with But I\nbros Yeah Yeah And so um but I spent a couple\nyears living out of a suitcase um my my now wife then partner uh she and I were\ngoing around just kind of like living in a place for as long as a visa would allow us So we were in Thailand we were in Croatia we were in Slovenia Uh it was\nfabulous Like what a what a great two years of my life And while we were doing that I was I was working for this company doing their internal R&D and\nlike it was amazing And also I started to have a crisis in the opposite\ndirection because this contract didn't ask very much of me and it was like\nchampagne problems I fully acknowledge that But I wasn't busy enough Like they didn't have enough for me to do So I had\na lot of idle time And idle time Yeah Right And like when when you're too\nlucky My my brain is not the kind of brain that should sit idle because I I\nstarted to think about it as like okay what is my purpose I got real\nexistential Like if I'm here and I am working this job that pays me more than enough money that gives me has virtually\nzero expectations I'm I'm doing interesting work Probably takes me 10 to 15 to maybe 30 hours a week max to do\nthis job And they are not I'm asking for more work and they're saying \"Hey don't worry about it Just chill out.\" Right It\nwas a dream job It was perfect But if that's that and I'm I think I was 27 at\nthe time It's like why am I here Why do I exist Like what is the point if this\nis what I'm doing And I started to really spin out on like okay well what's\nthe meaning of life if like this is it if I am I just going to coast for 60 more years as this and like I could have\nbut I needed to find something to care about something that I could that was important to me and I and I just found\nmyself kind of sitting in this this position of like I need to find that thing what's that thing and I was doing\na little bit of teaching I had like made a course on um like how I was doing all the work to try to find out what my\nthing was and my friend and I were both had educational backgrounds so we were like hey let's make a course about how\nwe're doing this And so we kind of put together the materials that we were using as something that other people could use Did that launch That was good\nbut I didn't want to be like a course seller I didn't want that to be my job So I was like okay what So I liked that\nbut how can I take the elements that I liked of that and like bring back some of the building stuff that I liked And\neventually what I landed on is I just want to build stuff and like I want to build stuff in a way that is challenging\nbut not all-consuming so that I still have time for hobbies but not so much time that I feel like my job is is\neffectively if they stopped if they fired me they would like not even notice which is how I felt about this contract\nthat I was on Yeah I mean uh it's important to point out that the first version of the Matrix was a utopia and\nthe human brains couldn't take it So they had to introduce this this office style existence We we have to have a\nreason to exist right And and I think that if we if we're not striving towards something it it feels too unmed like\nit's it's untethered We got to have we got to have something to care about And so I realized that the thing I cared about was I really like being being able\nto pursue things that are hard and I I needed something to be challenging for me to feel satisfied So what I landed on\nwas uh I you know I wanted to go in and and see how far I could go in a direction I'd never been in which was big companies So I started shopping\naround I I was like okay I want to go work at a company that like I'm not in charge of This was sort of the dream And\nI knew a guy from a conference This is actually something we can talk about in a minute Oh yeah I'm I'm all about\ntalking about conferences I met this guy at a conference We were just like conference buddies and every year we'd\nsee each other We'd hang out and he had ended up being a manager at IBM like he he'd kind of gotten that job years later\nAnd so I emailed him I was like \"Hey I'm kind of starting to look around for for companies Do you know anybody who's hiring Anybody that I should reach out\nto and he was like as luck would have it I'm hiring Um what are you looking for?\" And it turned out he was hiring for like\na senior front-end person And I was like \"Oh that's actually my job.\" And he was like \"Great Why don't you come\ninterview?\" So I ended up getting a job at IBM on his team Um Robin Cannon is his name He's he's great and\nwe sort of accidentally put me in this perfect role for me where I walked into\na a very mature JavaScript app at IBM that was across like 30 teams and they\nhad just shifted from a monolithic Java app to a microservices architecture but\nthey hadn't finished it right they they' done uh the micro monolith where where\nthey basically create 32 instances of the monolithic app and each team gets their own instance of the monolith and\nthey're like okay now you can do whatever you want with it and but mo what most teams had done is just keep the monolith so they were just running\nlots and lots and lots of parallel software and duplicate implementations and things were drifting getting weird\nand this is the problem I love I love these types of problems so I immediately got stuck in and I was like okay let's\nfind the worst UI piece of UI in the in the app and we found this billing dashboard that took like over a minute\nto load and I was like let's do this let's dig in and so we we started did a rearchitecture project We cleaned out\nsome of the old stuff because they had like backbone loading jQuery loading\nReact So there was like three levels of loading spinners and you know stuff that wasn't like hard to fix but if if your\njob isn't to fix it you just sort of solve the immediate problem and move on which is what I think a lot of folks end\nup doing Um through no fault of their own It's just that's how the the tickets get handed out And so my ticket was fix\nthis dashboard So I got the permission to dig in and really clean this out So I stripped out jQuery I stripped out backbone I actually stripped out the\nwhole monolith and we built this this thin spa layer on top which is what they were trying to build but nobody had ever\nhad the time to like really rearchitect it And I SPA is single page single page\nuh application Yeah So kind of like a client side only that talked to the monolith through API like an API\ncontract And this is where where most people talk like a monolith is like all the code is in one box right And then\nmicroservices what'll often end up happening is they slice that monolith vertically And what I started advocating\nfor was the APIs were really the brains of this application So let's slice those into into microservices but the UI\nshouldn't be part of those microservices The UI should actually be a thin layer on top that spans the entire app that\ntalks to these APIs through the API contract This later got popularized as\nJamstack Um I didn't realize that's what I was doing at the time but that was the concept that uh that I was working on\nAnd spontaneous uh independent Exactly Right That probably happened a lot of places but uh it did Yeah Yeah Nellify I\nguess is the they coined the term James They coined the term Yeah Matt Bilman coined the term um JavaScript APIs and\nmarkup That was Yeah that was the original idea was like JavaScript APIs and markdown the the ultimate concept\nwas like decouple your front end from the logic of your apps through an API contract And so your frontends don't\nhave authentication don't have data they don't have business logic You're you're just shipping something that says \"Hey\nAPI give me the thing I need.\" And it does the O and the business logic It It's so common now that like it doesn't\neven make sense to advocate for Jamstack anymore It's just kind of the way we build now Yeah exactly But at the time this was pretty revolutionary Um so I\nremember I I shipped like this this prehistoric Jamstack version inside of\nIBM and this page went from loading in 60 seconds to loading in like a second and a half And it was it was one of\nthose moments where like you know the the leadership part of this this particular corner of leadership at IBM\nkind of screeched to a halt and they were like what is this Like how did you do this What is this And I started going on these internal educational tours to\nshow people like what we had done why it was interesting how it could help how we could adopt this across the company And\nthat was where I really realized that I love this this sharing and the educational and the storytelling part\nbecause you're not going to you're not going to change somebody's mind by saying here is good code right You have\nto tell them how they fit into that story how this good code will impact their lives What do they get Do they get\nto go home early Do they get to get paid less often do they get to work on more interesting stuff because they're not\nputting out fires Those types of stories are what get somebody to adopt code So I was doing that internally at IBM and\neventually the the IBM is a very large company There's over 400,000 people working in the company And as you can\nimagine there's a certain layer that you hit where it just gets very very bureaucratic And so I went from building\nto mostly talking about building again I was in a lot of meetings I a lot of stuff that I was doing was discussion\nsuffering from success You're too good at rising So what what uh my wife always says you\nknow you would be just fine in any of these companies if you could just like let a problem be somebody else's problem\nAnd I was like no but that's the like that's what I can't do Yeah Well like I I I think it's admiral that\nyou have that compulsion to uh go and improve things And uh I think a lot of developers probably a lot of people\nlistening to this like they they're not content to just like you know keep their\nhead down and look busy or or or get good at something and just be like cool this like I am the you know\nuh API this I I manage this endpoint and that's what I do and like anything outside of the scope you'll have to go\ntalk to a different department like they just naturally kind of like they're like trees just shooting out tons of roots uh\nand and just trying to like get more and more robust And I I feel like that that is uh a tree uh would be like probably a\ngood analogy for you because I mean like trees can't help but grow It's the biological imperative Yeah Yeah\nNo I agree And and so you know a lot of what I was working on was was you know teaching people but it was all internal\nit was all um an internal tour of meeting with other teams and and trying to do some uh internal education stuff\nAnd so when I I started to get frustrated with the bureaucracy and and kind of realized that I'd gone as far as I could go without becoming a politician\nUm I I started a politician in this context not a literal politician but basically somebody who politics within a\ngiant organization Yeah exactly Like yeah I guess I should rephrase that So I what I found myself having to do was\nlike I'd run into a couple teams that were really really concerned about the impact that my changes would have on\ntheir relevance in the company They had they'd built a lot of internal systems and they had done all of this stuff to\nsort of um control the chaos of everybody working on on subpar repos And\nthe changes that I was proposing would remove a lot of what they had built in favor of of just automated checks And\nthey were they were worried that I was trying to get rid of them And and so I was doing I I realized that my job was\nabout to become I I have to go and sit down with these people and convince them that I don't want to take their jobs\nthat I want to work with them that I'm trying to you know give them opportunities to work on things that they're interested in instead of getting\npaged every three hours which was happening Um and and they they for some reason just like by the way like getting\npaged is basically having somebody say hey we need you to come and do this It's not like literal like a literal pager in\nYeah Well at that time you did have to carry the pager but oh you actually carried a physical pager like there's\npager duty and I always thought like oh that's that's a cute anacronism So originally pager duty was like you would\npass around a physical pager Um later Pedager duty became a company that handles notifying people based on who's\nin in like on call for out of hours fixes and uh now companies typically do\nit through something like Slack But you you at IBM it was very much like\nsomebody the the people that worked on those teams they just had a pager with them and it would go off they'd be like I got to go fix\nthis Um but so when I when I realized that you know I I was getting more into\na a sort of management or or almost like a business consultant role inside of IBM\nwhere I was talking to other teams that I had no influence over I well I only hoped to have influence I had no authority no control no no real sway And\nI had to I was like you know this isn't fun Like I I feel like I'm I'm convincing somebody to do something that\nI think is good but they think I'm out to get them And we're it's very adversarial It's very like I don't feel\nhappy at the end of the day I feel like I'm like fighting this very weird political battle where they they think\nI'm trying to take something I'm trying to give something I don't know how to get them to understand They think I'm trying to you know be some young hot\nshot who just wants to touch stuff because I because I came in and it's not my code Which is also you know fair Like there's I'm I'm sure there were things I\nwas doing that were that were part of the problem here But my my decision ultimately was I I wanted to go\nsomewhere with fewer people So I being individual being in the agency with like\na a small network of contractors felt too small IBM felt too big I was kind of looking for the you know the Goldilock\nsituation of not that big Oh so yeah exactly Goldilock you're trying to find that Goldilock zone where it's it's just\nthe right size The soup is not too hot It's not too cold It's perfect Exactly And and so I joined uh Gatsby which\nGatsby was a front-end framework It was Reactbased It was really early on the\nGraphQL trend and um GraphQL was a way of accessing data It's it's still reasonably popular today but not nearly\nlike it was 10 years ago Um and the the way that Gatsby worked was it basically\neverything loaded into a GraphQL layer which meant that everywhere in your site you had access to your data Stuff that feels pretty common in in modern\nframeworks today but at the time was pretty revolutionary They had just gotten funding they were one of the the frameworks that got funded early on the\nventure capital game when when dev tools getting venture funding was still somewhat novel Um yeah or anybody\ngetting venture funding that isn't doesn't have like AI and well yeah that that that whole shift um but so before\nthe AI shift there was a huge shift to fund developer tools webdev tooling basically um business for developers\nlike B2D was like the acronym and like yes you were trying to get people to do your SAS model uh like like we mentioned\npage of duty I mean like so you you buy you know seats essentially like how many\npeople are going to be on your team Okay that's 30 bucks a month right And if you're a giant organization like IBM you just maybe have your own internal tool\nbut if you're millions of millions of dollars Yeah Yeah So so I joined IBM\nvery or sorry I joined Gatsby very early I think I was employee number somewhere between five and 10 I I don't remember\nthe exact number Um but they hired me without a job title which was in retrospect should have been a warning\nbut uh at the time just seemed really exciting They were like \"Yeah you know you're you're obviously very good at this we we want you to come in and do\nthe thing that you think is most important for the company And I came in and I realized that the thing that really needed to be done was taking care\nof the community because Gatsby was completely built on open source on open source contributions on people in the\ncommunity telling stories about Gatsby using it building demos and we didn't really have any mechanisms inside the\ncompany for like nurturing that taking care of the people in the community So I came in and I built out some GitHub\nautomation so that people could get a t-shirt when they submitted a PR Um we invited them to be part of the\nmaintainers org so they'd have access to private discussions on GitHubs and have a little extra access Um started\norganizing some some you know meetings and different ways to try to make people feel included And that ultimately led to\nme creating what would become Learn with Jason where I was like well maybe I can live stream stuff to like multiply my\neffect And um the the live streaming stuff ended up being a a pair programming show that I still run to\nthis day We're like 400 and something episodes into it And that was the seed of me realizing that video was was super\nhigh potential What is pair programming for those who are unfamiliar with the concept Pair programming So the the way that I'm doing pair programming is I I\nbasically have um remotely I'm on my computer and then I've got somebody on Zoom who's looking at my screen and and\nwe I'll say like \"Hey I want to build a thing You're an expert in that thing Can you kind of talk me through how we would\ndo that?\" and then that I will build while they sort of explain and coach how things are building Um traditionally\npair programming would be two people sitting at the same computer kind of solving a problem together And I really really love that style of of pair\nprogramming Um at the time I was limited I could only do remote and remote is just as good I love I love remote pair\nprogramming It's a great way to to have somebody articulate the way that they think the things that they understand\nand you as the the learner have access to directly asked questions as you're\nlearning to get clarification in a way that you can't do if you're reading a a like reading the documentation if you\ndon't get how it works You kind of have to find somebody to ask You have to go find the forum or something like that You can still do it but it's really nice\nto have that instant feedback loop of okay why did that just happen though And then somebody goes oh yeah uh let's look here and then you can see how this thing\nfits together It's like oh okay all right You just added context that would have taken me 30 minutes to find in 10 seconds Yeah And and by the way this is\none of the reasons why like a lot of people will spend like huge amounts of money going to like different programming programs or or buying\ncourses or something like that Like I think it's a very good use of your money to just pay some computer science\nstudent or some dev uh pay them a little bit of money to pair program with you and just answer your questions in real\ntime 100% I I think if you can create opportunities to build with other people\nthere's this concept that I love Um that's it's called tacet knowledge Yes\nAnd tacet knowledge is this idea that there are a bunch of things that we do that we don't we don't like consciously\nknow They're just skills that we've picked up Like when you walk when you breathe you're not thinking like okay how do I keep my feet underneath me\nRight You you just sort of learned it so well that you do it without thinking But to somebody who doesn't you know like to\na baby that's learning how to walk it's a very active experience and they have to watch people doing it to sort of get\ntheir get the idea of how they should be doing it and build up this knowledge And so the same thing applies with any skill\nIt's just it feels different when you're an adult because when you're a baby you you expect babies not to know things but\nas an adult you you're like \"Well I'm I'm smart I should be able to figure this out.\" But you still have to like build instincts and and understanding\nAnd the best way to do that is to be around someone This is why the the like the journeyman model apprenticeship\nmodel was such a big thing is you would basically have somebody who wanted to become an expert follow the expert\naround and watch them and then after weeks or months or even years in certain\ncases they would finally have observed enough of what the expert was doing that the expert would say \"Okay now you do\nthis.\" And then they would do it and they would have some understanding of what should happen and they could get coached in what would have been a pair\nprogramming way So if you're a plumber an electrician a woodworker whatever I mean this is a huge part of medical\neducation here in the United States residency and and like you're going to go and and you're going to spend like\nthree or four weeks doing pediatric care and and basically just shadowing a right physician who's already been doing it\nfor a long time and seeing how they interact with the patients seeing what they look for you know like all all that stuff right because there's so much acid\nknowledge involved in being a physician and and I would imagine the case with like you know being an electrician or a\nplumber and with a software engineer it's the same thing and one of the things that it's oh yeah go ahead one of\nthe things that I've really noticed with with software engineering is that you you have like the hard skill I've I've\nread the manual I understand what the names of the APIs are and I can build a thing but where the tacet knowledge\ncomes in is when you sit next to somebody who's built this a thousand times and you watch them write it and\nthey reach for a for loop versus mapping or they write it as a like functionally\nversus class-based or they you know they they'll do a they always do a thing and you go wait a minute I was always told\nthat it was supposed to be like this or I've never seen anybody do it like this why did you why did you make that choice\nand then they'll pull out some story like oh when I was working on this project this thing happened that had a\nweird memory leak And so that's why we don't use this approach because there's this weird edge case that you'll never\nknow unless you've experienced it or somebody like me tells you or they'll show you something like an alias or a\nshortcut or just some little trick that they do The way they organize their editor like I one of the ones that I\nlearned is I I organize the file tree in my code editor on the right hand side of the screen which when people see it at\nfirst they go why would you do that That's terrible But the reason I do it is because then when you open it and collapse it the code on your screen\ndoesn't jump because it's always left aligned right A little thing that at the time when I first saw it I was like \"Oh\nwhy would you do that?\" And then they explained and then I tried it and I was like \"Oh this is better.\" And now it's just like a tiny little quality of life\nthing that that improved the way that things work And it's all tacet knowledge exchange I learned that by watching\nsomebody else work I have an anecdote about tac Uh so so like that that kind\nof exchange you said like just asking about why people are doing certain things and we're going to talk about conferences in a little bit That's\nthat's something you and me are really big on encouraging people to go to events and and just spend a lot of time\ntalking to other devs Uh and I mean you could definitely argue that's like one of the ris for code TV right The reason\nfor being uh is is to steep people in like the proverbial meta of Yes who like\npeople like learning uh working as devs and like watching them work and hearing kind of the thoughts that occur to them\nand watching them choose their tools and solve problems and stuff Right So this is an anecdote I was talking with this\npilot uh and I don't know anything about aviation and I'm not really that interested in like dying young in an\nairplane crash like you know Wy Post or something like that But\num this uh pilot he he was an amateur pilot just somebody learning how to fly\nuh you know working as an accountant or something like that and uh he he said that uh you know one uh one day he was\nflying and something just started going wrong and the plane started moving in a very weird way and he was losing control\nof the plane uh and he was freaking out because he was about to die Um and like\nall this these thoughts were racing through his head And then one of those thoughts was this conversation that he'd\nhad like several years before just drinking like you know office burner\ncoffee with some other person at his company who was also a pilot talking about how like oh well if you ever get in this type of situation this might be\nthe cause and this is what you need to do And like that random encounter from\nyears ago a seemingly casual just swapping stories about like flying and stuff People love sharing stories I\nthink it's a it's an integral part of like the human experience We have this in just like trees have the instinct to\ncontinue growing and absorbing more water and nutrients from the soil and stuff humans do the same thing with knowledge because I think we do at a\nsubconscious level realize that it is important to our survival and the\nsurvival of our you know families and stuff to be doing this but but he thought back to that moment and then he\nrealized from that conversation like he remembered enough about it that he was like oh maybe I should try that he was\nable to get himself out of the spin and survive so it was literally a matter of life or death and you were to look back\nat that they just felt like a throwaway conversation just just killing time in between uh you know like going back back\nto work during your break Th this is one of those things that you know it's so hard to communicate the value of the the\ncasual discussion the casual observation of of other people in your space But\nwhen I was at IBM we solved massive problems in the company by getting a few\npeople from different teams to have lunch together because through the course of conversation naturally over\nthe day they would bring up oh man we're just really struggling with this thing and somebody wait a minute we just we were just looking at that and we kind of\ntried this thing and they would they suddenly dot start connecting and the next thing you know this thing that would have required a massive crossf\nfunctional effort and buyin from all these VPs and it just never would happened These few engineers sitting\naround solved their problem They'd send each other a couple Slack messages they would implement the fixes and it just\nwent away right Because they were in the right place having casual conversations observing how each other were working Um\nsimilarly that's you know like you said that's the whole point behind code TV is I know that not everybody has access to\ngo sit with a senior engineer and I know that a lot of senior engineers are the most senior person on their team if\nyou're in that situation how do you get more exposure to more stuff And and so\nmy my goal with originally learn with Jason and now with webdev challenge and elite heat and everything else we're\nmaking on code TV is can we create a space where senior engineers are going\nto do things senior and junior engineers people have all experience levels on the show but can we can we have them do\nthings and sort of talk through their thought process so anybody can be the person who is just sitting in the room\nand observing with them and hopefully they walk away having learned something having thought differently about how\nthey approach a problem Maybe they understand a new a new avenue that's open to them when they're using a tool\nLike is it as good as being in person No But is it pretty close I think so And and for folks who don't have the option\nof going and hanging out in an office I think it's the best option out there you know Yeah Awesome 100% agreed I've\nreally enjoyed watching and kind of like steeping in the meta of software development Like it's kind of like being\npart of like a a mini hackathon And yeah you're just like watching it transpire in front of you but uh you're you're\nlike kind of like it's weird like the way your brain processes Okay they've encountered this pro sort of problem They're probably going to do this You\nlike start jumping to like what predicting what's going to happen and stuff Oh it's different And one of the things I love about Code TV is\neverywhere I go like if there's a TV on it's on like home improvement type channels It's like contractors that are\nlike you know fixer uppers uh like fixing houses or it's food right Food seems to be huge It's it's uh you know\nchefs uh competing in these reality style TV shows or like like kitchen nightmares type stuff like you know\nstuff like that Uh and it's it's just like so much anecdotal kind of like input that it you just you're kind of\nlike basking in it or you're you're what's the word You're marinating in it Yeah uh since I'm using cooking or\nanalogy you're you're just steeping yourself in all these different things that could transpire and and it's building up this kind of like\nassociative web of things that can happen in software development and stuff like that So so it's really great for\nkind of contextualizing a lot of that And if you go on free code camp you work through the curriculum It's just like the raw skills really like we're\nexplaining concepts and we're we're giving you tons of programming practice and all that stuff but we don't really provide any sort of like actual uh I\nguess kind of like war stories type experience I mean the closest you're going to get to that on free cooking is probably just listening to this podcast\nAnd I think I do think podcasts are an excellent source but there's like when you have video and you have people\nactually interacting and and you've got like this unscripted show where you you kind of like contrive these scenarios\nlike you have four hours to build this project and it's got to do X and it's got to do Y and it's got to do Z and at\nthe end of that we're going to see who did the best job You're like on the spot like people people have to work quickly\nThey have to make trade-offs Yeah I think that's awesome I think I mean you you bring it up in a in a good\nway where I I think there's this this cliche that we hear all the time that you become the sum of the five people\nyou spend the most time with and I think that that is that is true to an extent\nbut I would say that the underlying meaning behind that is you become\nwhatever you bury yourself in right if if you spend all of your time looking at\na certain subject you are going to start to shift in that direction and the thing\nthat's tricky is that you can't just do one of these things Like you couldn't just hang out with other developers and\nnever build anything and become a developer You can't just build things and never share it or never show anybody\nor never deliver it and expect to become a great developer And you can't just read documentation and expect to\nsuddenly become great right You have to do a combination of of active study like\nyou know what I would call deliberate practice You have to do the sort of environmental immersion and you have to\ndo the application of it the the practical application And in any situation you know if you're going to be\nthe worldass musician you need to do practice deliberate practice Sit down read the notes really go through your\nscales but you also have to perform You have to get comfortable on stage You have to be able to bring some emotion into that performance And you probably\nwant to hang out with other musicians who are going to help you get connections and figure out where you you\nknow where you can improve You can see things that they're good at that you weren't thinking about Um software is\nexactly the same Like if you only go out and read tutorials you're going to have a lot of what you're going to have a lot\nof like potential knowledge but then you're never applying it You're never you're never testing it by having\nconversations about this stuff If you only talk about this stuff you never build up the knowledge and you haven't\nbuilt up the the practice So you you kind of have to and if you only build you kind of end up at this local maximum\nof what you can figure out on your own and then you you can't like expand beyond that And the way that I think\nabout it is that you know you ideally what you do is you're in a\nperfect situation where you can find a bunch of developers who are super talented and ready to hang out and you\njust go be part of that community the absolute best place you could be is is just go hang out in a room full of\ndevelopers and build stuff and good things are going to happen That's how I learned music I found great musicians\nwho were ready to play and they let me hang out with them And I got so much better at music in such a short time\nbecause I it was all I did It was my whole life was like wake up in a room full of musicians play music all day go to sleep in a room full of musicians\nLike that was it right Um I didn't have that with software Like when I when I\nwanted to learn software I was the only person that I knew other than my dad who was like a C engineer and who was not\ninterested in teaching me anything He you know he was working on embedded systems things I didn't care about I\nwanted to work on the web So I had me and some books and like the W3 schools\nforum That was what existed at the time that I started learning code And like every time I found another\ndeveloper I I was kind of like getting gatekept out of it I remember I was talking to a guy who was who was building websites at the I was working a\npre-press job at a printing press and I was like \"Hey I I had a question about flash and he just looked at me he goes\n\"Can you tell me what the difference is between cell spacing and cell padding?\" And I was like I what That's not He's\nlike \"Then you're not ready for flash.\" Like it was just this really bizarre like you know testing Does that happen\nto you multiple times Yeah I I mean I've had I've had weird situations where people just try to get you to pass some\nkind of knowledge test before they'll engage with you right I mean like that was part of like if you watch the 1990s movie Hackers which is a very accurate\nportrayal of software development in the '9s uh they would always be like you\nknow they were always trying to be like out leap one another Yeah Like you're trying to assert your nerd credentials\nYeah And it is absurd It really is Don't do that Pro tip Uh we don't do that\naround here It doesn't make any sense It's it's silly Uh the chest beating you know um and it may serve some sort of\nweird you know tribalism purpose on Savannah but it doesn't have any real\nobvious use in the uh the actual you know contemporary developer ecosystem That that was a big thing that I\nrealized was that for me at least it it just anytime that I felt myself wanting\nto test somebody's credentials I was like what what do I gain by making somebody prove what they know like it's\ngoing to become very obvious whether they do or don't know this stuff within a few minutes of regular conversation So\nI should just engage with them like they know and they're going to out themselves if they're faking it right Be charitable\nYeah Right like assume assume that people are there because they want to be part of the community and assume that\neven somebody who doesn't know everything is probably still a valuable addition to a community cuz like I said\nwhen when I first went to my first conference I made my group of conference friends who at the time we were all\nearly career no real connections no real network we were like the odd people out sitting on the edge of the room saying\nlike hey did you come here alone like what's up I'm Jason and you know 10 years later all of those people who are\nmy conference friends are now in senior positions They're managers they're directors they're like these are now\npeople with influence and network And like these careers are really long And\nif you're just coming in and you're 20 years old like you've got 40 years of career ahead of you And the the it takes\n5 to 10 years for somebody to go from junior to senior and it takes like 15\nyears for somebody to get to a director level So if you're making friends today you can assume that literally everybody\nyou meet today as long as they don't quit is going to end up being in charge of something And like and that's if\nyou're only going utilitarian Also just consider it's kind of nice to have a lot of friends Yeah Like one of my favorite\nthings about going to events today is that people I met 20 years ago when I first started out in my career still\nshow up at these events and we see each other once every three years at an event And when we do it's like Christmas it's\nthis person that I came up with We you know we like each other's posts on LinkedIn and that's about it But when we\nsee each other it's like oh my we got to catch up Like let's sit down We go you know we go find a beverage We sit down somewhere We talk for three hours about\nwhat's what's new in our lives over the last few years And it's always a great story you know and it's always really\nfun And that you know that leads to just this incredible amount of career\nresilience And it it like opens up all these doors I know so many people in this industry and all of them are people\nthat I would consider somewhere between acquaintance and friend because when we see each other we're friendly we hang\nout we we high five you know we'll we'll get a coffee together and then when we part ways some of them I'll text You\nknow I've got friends who I've got a group chat going with that's been going for for years and years And then I've got people who I will only talk to when\nwe see each other in the same place because we you know we like each other but we don't have that much in common And that is perfectly acceptable Like\nwhat a great place to be where everywhere you go you got somebody you can talk to right And every single one\nof them if they ask me for something I'll pass it along if it's not too big an ask Like if they're like \"Hey I'm I'm\nlooking for my next job You know anybody who's looking for this type of person?\" If I know I'm going to pass them along And if it's somebody that I ask like\n\"Hey I'm working on this new project Would you mind you know sharing this around?\" They do right And it's I it\nmeans so much to me to have that sort of network And no matter how you do this whether\nit's through social media whether it's through your Discord groups whether it's through groups like free code camp or\nwhatever group you're part of if you can get in person even better if you can make find a local meetup\ngroup if you can find developers if it's the folks that you work with at your company whatever it is but like really\nfinding that opportunity to connect with other people and and realizing that like you're going to pick up the tacet\nknowledge you're going to pick up friendships you're going to build resilience in your career you're going to build these extra connections get\nthese new perspectives and all of that leads to you having you know more capabilities more lateral thinking about\nhow problems can be solved more connections more opportunities like you you kind of can't lose by by taking a\nmake as many friends as possible strategy Yeah I mean you can't have too many friends Uh you can't have too much\ntacid knowledge You can't have uh too much kind of like secondhand experience And that's what you're getting when\nyou're having conversations with people You're broadening your own perspective Maybe you wouldn't have encountered that sort of thing because you're in a\ndifferent line of work or you have a different lived experience But it is very beneficial to be able to empathize with people and understand uh why\nthey're doing what they're doing And uh yeah like you can learn a lot Uh so uh\ntell me a little bit of advice you would give Let's I'm I'm going to do some role playing Uh I I just have a few quick\nquestions toward the end that I I I really want to have make sure everybody walks away uh from this not just\nunderstanding you know tacid knowledge and the role of that the role of building rep uh relationships the role of steeping yourself in uh what I call\nthe meta of software development um but also I want them to have like some\nactionable advice that they can they can walk away with from somebody who's been there and who who's gone through kind of\nthe trials and tribulations the slings of arrow slings and arrows of being a self-taught dev um so first let's Say\nhypothetically I'm just going to throw out a scenario You are working at a\ngrocery store and you're checking people out and uh or maybe you're bagging groceries or stocking shelves or\nsomething like that I did a lot of that when I was younger Um and uh you have\nmaybe 20 hours a week that is not accounted for through work sleep taking\ncare of your family all that stuff like you have the luxury of 20 hours a week like and maybe you have\n$500 a month I don't even know if you like let's say $200 a month $200 a month budget Uh what are some things you would\ndo uh to try to over the next two or three years put yourself in a position\nwhere you could you know get a job at IBM or get a job at an agency I mean the biggest one is build right\nAnd the the easiest way to build is to pick things that you will care enough to\ncomplete Um so you know for me it was I had a band I needed to finish the band's\nwebsite and and through building those projects I was getting practice and I was establishing\ncredibility if I was in a situation where I didn't have that So like what I\ndo now for example is if I've got a thing that I need like the I wanted to make this game show Well the game show\nneeded to run and I didn't have the money to buy production software So I was like well okay what does it really\nneed to do And I built the software to make that function I needed a way for people to get uh to like become\nsupporters of Code TV because our model is five bucks a month for for early access Okay Well I need to be able to\ncollect that five bucks So I built a subscription thing through Stripe that\nlets people pay five bucks a month and and that I needed to use as a way to to signify that they had access to watch\nthe videos Um each of those things is a little project in itself Like figuring\nout how to take money through Stripe is a couple weeks of of like reading docs\npracticing building that thing figuring out how to do um controlled access is you know maybe a couple weeks of of\nreading docs and figuring out how those things are Figuring out how to fit those two things together how to like check the subscription to determine the access\nis maybe another couple weeks right And each one of those tasks is a thing that you can now go show in a job and say\n\"Look I built this I don't know this calendar app for my local you know I've\ngot kids they play soccer Uh I built an app that helps the the parents schedule\nwhose turn it is to bring snacks to the soccer games Right That's a real app that's like actually beneficial You\nfigured out how to send text messages to the parents to remind them that hey today's your day to bring the orange slices whatever that thing is right If\nyou build an app that is is useful to you and solves a real problem you've just built your portfolio and you're\nproving that you can solve real problems with code which is exactly what a company like IBM wants to see like when\nI'm interviewing uh when I was at uh VP at Netifi I had to hire people all the time and and what I was really curious\nabout wasn't whether or not somebody could recite documentation to me or whether they could solve um like the the\nalgorithm challenges What I was really interested in was could they talk through how the code that they're\nwriting is getting to an outcome that helps people because that's what like really at the bottom of everything\nengineering is It's being told here's the problem and here's the desired outcome I need you to turn this desired\noutcome into functioning code And if you can articulate that through something that you've built you have proven to me\nthat you can do this job Yeah So to some extent you're creating\nactual portfolio pieces Yes Natively Um just and it's just easier to follow\nthrough on a portfolio piece if you've if you've got a problem you're actually solving Like it's building a hypothetical is weird because you're\nwho's your customer like you you know you need to have a customer in order to build something useful So building\nanother to-do list is good for understanding how a framework works It's not a good portfolio piece because\nthere's no customer If you are building something that allows you and your kids to track who's on chore duty now you\nhave a customer Even if it's a to-do app and you can articulate like why did you build it the way you built it Who is\nthis for How is it used How is it different from a standard to-do app functionally basically the same code\nStory-wise outcome-wise you're actually telling me like how you thought through a real problem and got to a working\nsolution Yeah So the biggest thing to do is build\nUh and second biggest would be try to get in the same room as other developers If you've got $200 in budget see if you\ncan get to a local meetup See if you can uh go you know save up for a couple months and go to a conference twice a\nyear something like that like the the being around other developers and making friends with people in the industry is\naside from being able to write the code is the single biggest thing that you're going to do for your career\nAwesome So build and get in the room with other\ndevelopers I'm writing that down because that is very important Uh and I I feel like you you\nlike I obviously people who hear that advice they're like \"Oh yeah yeah throwaway advice.\" But but like if they\nactually listen to it in the context of like an entire conversation they get all the tacit knowledge and and the the reasoning behind it and all that stuff\nAnd this is one of the reasons I advocate for listening to podcast and not just throwing a podcast into GPT Hey\nsummarize this podcast You get some bullet points and I I don't even like to use bullet points because I feel like\nthe void of context like if you look at the way Amazon does things they do like the six pages You can't put bullet\npoints in those Yeah you have to write a six- page article that essentially\ndistills all your thinking and why and all that stuff into like a document that people read that like one thought\nconnects the other and all that stuff and I I think that's a discipline a lot of people lost with yeah you know powerpoints and stuff like that like\npeople have been complaining about skills atrophying since they started writing things down and doesn't that affect your memory you know but like\nlike this is just like a common thing like yes it's it's one thing to hear oh you should be building stuff you should get in the room with other developers\nbut it's another to like hear you talk about how those two things have had such a profound impact on the course of your\ncareer and your development as a person going from suffering from success in one\narea to suffering from success in the other and just continuing to like find bigger bigger challenges Like I I'll be\ncompletely candid I would never be sitting at there and like at a cushy job and being you know what I want to do I\nwant to go work in some giant you know corporate bureaucracy as a developer and\nlike trying to claw my way up But it's such a cool story the way that you went in and you shook things up with your\noutsider perspective and you ravebled you roused some rabble I don't know what the verb is but b you pissed off a bunch\nof people Well I think a a thing that I've learned about myself is that I I my\nmy very existential takeaway from from my like crisis uh back in in the like\n2016 whenever it was the thing that matters the most to me is dying without regrets Like I I you\nknow I took away a very like nihilism in a positive way look at life like\nultimately life is meaningless like there's there's no point to us being here there's no external value applied\nto our lives which means that in good news we get to assign the value to our\nlives and so to me the value that I've assigned is that on my deathbed I want\nto be looking around and saying \"Nailed that No regrets.\" Right I\nwould do it exactly the same way And so to me the the thing that I think about\nis what gives me that feeling of like I spent my time well And I I believe very\nmuch that the most value I get out of a day is when I have tackled something\nthat was difficult and that expanded my abilities in some small lateral\ndirection And I think that's why I went from musician to agency owner to tech to\nto software architect at IBM to to startup guy to now I'm at Code TV and I\nI basically do like 19 jobs in a trench code because I spend most of my time in sales but I do a lot of time building\nstuff and then I'm also writing shows I'm filming things I'm editing things I'm like I'm still doing design I'm\nbuilding websites I you know like I'm all over the place And every single one of those things is hard And every single\none of those things is is satisfying to me Like I find value in having done it\nwhen I find myself in a position where I'm no longer feeling the value of it So for example editing videos takes me a\nreally really long time I like doing it but I don't get enough value to justify the cost So I've hired contractors to\nhelp me with editing Right Similarly with like some of the other tasks in in making the videos like I'm not very I'm\nnot good at makeup So I'm not going to be hair and makeup So I hired a contractor for hair and makeup All those sorts of things Like but I did them all\nto start And when I felt like I learned it I was like do I want to get really good at this or is this something that\nI'm happy to have somebody else do And in most cases with with like parts of the process it's like okay I know how to\ndo it I'm not very good at it and I don't want to take the time to get really good at it So I'm going to hire a contractor Yeah And that's the shift\nthat I think has saved me from the the pit that I fell into with my earlier agency where I would I would basically\nsay like I don't know how to do this and I'm scared of giving it away so I'm going to I'm going to like suffer and do\nit and somebody else will do the parts that I like Now I'm asking myself like do I care enough to get good at this\nBecause it is better to let an expert that I can't oversee do this job and\nobserve their output because I can tell whether or not they did a good job when I see the final product Like if you hire\nsomebody to run lights and you get your video and it's too dark or like everybody's blown out you're like \"Oh I\ndon't think I'm going to work with that expert again right?\" Like you can but you know you're going to make more stuff so you can make a different choice next\ntime And and what I was doing before is I would I would hold on to everything really close because what if I make a mistake But those mistakes are you know\nyou've got something else coming right behind it So you get to learn from those mistakes and adjust And that that allows\nyou to you know you're always able to stretch yourself try something new be challenged And for me now every single\nday when I go to bed I'm like man what a day I got to do all this stuff that I've never done before I'm I'm working on\nthings that I never thought I'd be able to work on I I make TV for a living somehow Like how I got there from where\nI started I truly couldn't directly articulate it Like I just I saw\nsomething interesting I was like what if I tried that And then it's like maybe do a little more of that Oh that was fun What if I tried this And the next thing\nI know you know I'm I'm basically an executive producer I have a studio Like all sorts of weird stuff You just kind\nof chase chase the things that give you energy and that that that make you light up And try not to let go of the things\nthat that let you light up And and you're gonna have a great career Like I have I have no regrets I'm having so\nmuch fun Yeah Yeah Chase the things that give you energy I love it And I mean it is amazing to think back to you sitting\non you know a tour van probably like really one of those really uh stinky\nlike 70s vans that had been repurposed as like kind of a a tour van which was\nprobably very dangerous if you had the gear Did you have like the cage to hold the the No we had uh we had like a a 15\npassenger Ford van So it was like a fourbench van Everybody had a bench to sleep on and then we had a 15oot trailer\nthat we'd pull behind it Ah okay That's safe I've heard so many horror stories about gear gear that like just shifts\ntoo quickly We we did that a few times too like earlier on where we we'd load up a 4Runner with like amps and stuff in\nthe back seats and we were like piled up you know on each other's laps in the front seats so that we can make it down\nYeah Yeah But uh but like like from you being I can just imagine you on your laptop in between like uh doing gigs\njust sitting on the bus like learning these skills out of necessity because nobody somebody on your team needed to somebody in your band needed to be able\nto do this and and you just kind of like took it upon yourself to you know uh working as a dev and then running an\nagency then working at a big company then uh working at a bunch of small tech startups and now doing what you're doing\nrunning a essentially a TV show Uh I mean it's a pretty amazing journey and\nuh it's it's difficult you know it all may make sense looking back but it\ndoesn't necessarily make sense like like I'm sure if you were to send a time capsule or like some sort of message\nback to yourself like yeah running a TV station or something like that that'd be like a really weird like you probably\nlike uh this was meant for somebody else Well and and I think the other thing too is if if you had told me that when I was\n19 and in the band I probably would have taken a different path that would have led me away from where I am now Like\nevery experience that I had in the middle is what gave me the ability to do what I do today because code TV is\nspecifically making TV for developers And the reason that it works is that I am an engineer Like if I was trying to\nmake code like if I was trying to make TV for for uh like site reliability engineers the\nfolks who like do hardcore keeping the servers up handling load I've never done that job I couldn't do that I it\nwouldn't it wouldn't be authentic It wouldn't resonate I wouldn't be talking to that audience in the way that I can\ntalk to engineers And if I hadn't done all the work as a agency runner where I\nlearned how to sell and talk to companies and align what companies want with what we're trying to make and make\nsure that their goals match the outcomes that we're designing for If I hadn't learned to do that there's no way that\nI'd be able to talk to the the companies that I partner with now that make Code TV possible right Because it's funded\nentirely through viewer and sponsor support Like there's no other income coming into the show And and so for me\nto do that I have to be able to communicate the value to the people who want to get involved And I learned that\nby being a VP I learned that by running an agency And so every single bit of my\nexperience as weird as it is is being used in in small ways or in big ways to\nallow me to do this completely different thing that if you'd even 10 years ago if you'd asked me \"What do you think you're\ngoing to be doing in 10 years?\" I I would have told you I'd probably be a you know a VP or a founder Like that\nwould be my hunch is like oh yeah I'll be running like a a tech company is my guess I'll be in leadership somewhere Um\nand that almost happened Like I was a VP of Netifi There was a a chance for me to probably leave Netlefi and go in as a a\ntechnical co-founder of a company or as a CTO somewhere or maybe a CMO somewhere\nUm but what you're doing is so much more interesting and and at the end of the day I get to do all those jobs I am our\nCMO I am our CEO I am a a a Devril I am an engineer and I get to like hold a\ncamera sometimes and I get to to do a little bit of acting and I get to write Like I I basically you know through\nchasing the things that I'm curious about I was able to carve out this space that didn't exist before And I get to\nuse all of these skills and and pursue all these things that I find interesting in a way that is it is really hard Like\ndon't get me wrong this is not a it's not a job that I'm like cakewalking I'm I'm working a lot I'm way over my head\nin a lot of different areas but I'm having a blast And and I don't think I could have done that if I didn't just\nhave this this sort of like little thing in the back of my head that's like are you challenged Like are you actually are\nyou growing Did you get a little bit better today than you were yesterday And that driver is is just kind of you know\ngive me permission to be curious about stuff and chase that curiosity And you know I trust that anything I learn will\nhave crossover value You I could go learn ceramics I'd probably find a way to use ceramics and like what I learn about ceramics at least in how I do\nother things in my life Like I think we we get it in our heads that if you are in an industry that like if you leave\nthat industry none of the skills are transferable But I I have found many times over every time I shift from one\nrole to another from even from an industry to another that the amount of crossover is huge Like you really do\nretain a lot of the value of anything that you learn and the only thing that\ndoesn't directly transfer is like okay if I were to leave engineering and go over into making food content almost\neverything that I know stays intact I just wouldn't be directly writing code anymore Yeah So some of the domain\nexpertise falls off but like all the meta skills Yeah Uh are still there like\na lot of the context you said and stuff like that The the the specific domain\nexpertise except in the the most specialized roles Specific domain expertise is\nreally only valuable from getting you from junior to about senior From senior to principal staff VP director whatever\nthe the advanced things are your domain expertise doesn't really help after that point It's all the other things It's how\nyou work with people Can you articulate plans Well can you get everybody on board You know it's like all these\nthings that are really not nothing to do with the specifics of your domain Which is why a great manager doesn't need to\nknow how to code because that's really the least important part of a great manager's job Like a good leader is\nthere because they're good at leading not because they're good at coding And I think this is a big mistake we make in\nthe industry where we take good coders and say obviously you can run a company and then they don't and we're all\nsurprised It's like well they didn't have any of the skills They know how to code They don't know how to lead They don't know how to coordinate anything I\nmean I I I would I would do the why not both girl Uh I I think that um it\ncertainly like having it makes you better able to empathize with the people that that you're uh managing if if they\nlike respect you and if you could potentially sit down and like solve technical problems in addition to being able to just do Yeah And and my I think\nat the bottom of everything what I what I believe is that there's no harm in learning and there's a lot of harm in thinking that learning is a waste of\ntime Yeah So like if you're looking at a skill going when am I ever going to use that I promise you you will Like it it\ncould be anything You want to learn how to edit Tik Toks You want to learn how to basket weave You want to learn how to\nmake little like paint miniatures Like any of that stuff every single bit of it is going to be valuable somehow and you\ncan find a way is for insects Um well I am going to encourage everybody to check\nout an episode of Elite Heat uh on Code TV and I'm also going to check encourage them to check out uh an episode of\nWebDev Challenge I've really enjoyed watching both uh type both shows and I'm\nreally excited to see what you all do with code TV in the future uh and uh see\nwhere you take things because it sounds like there's plenty of open C that you\ncan explore in the area of if you want to be like bravo for developers like I I think that'd be like an amazing thing to\nexist in the world and yeah we we've got a lot of ideas and you know we're always looking for new partners so you know\nlike shameless plug if you've got a company and you want to reach more developers ers get into my inbox Let's talk We have some we can we could have a\nlot of fun together Absolutely Well Jason it's been an absolute pleasure talking with you I've learned a\ntremendous amount from you Uh and uh I I think the the role of tacet knowledge uh\nthe importance of going to developer focused events the importance of continuing to challenge yourself and not\ngetting complacent And uh I mean what you said about like positive nihilism and and and the notion that like life\ndoesn't really have any meaning There's this web comic that I I love It's this guy He's all He's all down and sad He's\nlike \"Nobody gives a damn.\" And then he like looks up and he's suddenly like really happy He's like \"Nobody gives a\ndamn.\" That's right That's exactly right Yeah I can do whatever Well and and for\nlike Thank you very much for having me on the show I feel like you know free code camp has been one of those fixtures throughout my entire career where I've\njust I talked a little bit earlier about how you know we don't always have access I grew up in Montana where there were no\nother programmers and I didn't have access to other tools And had I had a free code camp I think that would have\nmade a really big difference for me And seeing how you know you've been able to connect people who are in all corners of\neverywhere who maybe don't have an in-person community they can get to to get free access to materials instead of\nbeing told you got to go buy this you know multi,000 boot camp or whatever like it it really is like I you know I I\nlove when you can see that somebody found something that they can truly care about and and I I feel that you you have\nfound that thing and you you make something that I think is really valuable and I think the community that\nhas emerged the the teachers and the the folks who are really active in the community It just it's really something\nspecial and uh and so I'm I'm really happy to to get to play a small part of it you know and and to be here on this\nand and you know I did a little a couple other things in the past with y'all and it's it's always such a pleasure Yeah\nWell uh I've learned a tremendous amount from you I hope everybody listening has learned a ton from Jason as well Again\nI've got some links to some stuff in the show notes that you should check out if you want to learn more about Jason learn\nmore about COTV And until next time everybody happy coding",
            "lindy AI just rolled out something\ncalled agent swarms and it's honestly a\ngamecher the idea is simple but powerful\none AI workflow can now clone itself\ninto hundreds of many agents each\nhandling a task at the same time so\ninstead of doing things one by one\neverything gets done all at once if\nyou're into automation lead genen or\njust curious about how AI can take over\nyour daily grind this is something\nyou'll definitely want to check out so\nlet me start with the big picture lindy\nAI has existed for a while as a noode\nautomation platform that uses large\nlanguage models like GPT or Claude under\nthe hood imagine you've got something\nlike Zapier or N8N which handle triggers\nand actions for thousands of apps but\nyou add an AI brain that can read\ncomprehend write emails transcribe\nvideos or even embed on your website now\ntake that concept further and you allow\nthese AI agents to copy themselves\nhundreds of times well that's what\nLindy's brand new agent swarms are about\nyou can feed the system a giant list of\ntasks like a spreadsheet with 20 200 or\nmaybe even a thousand different lines\nand each line spins off a separate agent\nthat runs in parallel it's mind-boggling\nthe backstory here is that Flo the\nfounder of Lindy posted a big\nannouncement on Twitter well X and he\nshared a two-minute demo in that demo he\nshowed how you can for instance have a\nlist of conference attendees in a\nspreadsheet and you want to research\nevery single person you put the link to\nthat spreadsheet into Lindy and suddenly\nyou've got an agent swarm where each\nagent hunts down details on one attendee\nwhen it's done you get a clean final\nreport summarizing who all these\nattendees are flo said that's just one\nscenario another scenario he mentioned\nwas meeting prep if you're the kind of\nperson who has a bunch of meetings every\nday you can have Lindy check your\ncalendar each morning see who you're\nmeeting dig up context on them find\ntheir LinkedIn profiles and email you a\nsingle morning digest so you're always\nprepared then there's competitive\nanalysis so you can run a swarm that\nchecks competitor websites traffic\nnumbers employee counts and the latest\nnews and one more example is sales\noutreach where you might have a big list\nof prospects lindy can do all the\nresearch on them gather personalized\ndetails and generate a bunch of custom\noutreach emails in seconds it doesn't\nmatter if it's 20 leads or 200 because\nthey all happen at the same time what's\nalso cool is that Lindy states they've\ngot over 5,000 integrations and 4,000\nweb scrapers which they call integration\nsupremacy so it's basically the largest\nagent in terms of how many tools it can\nhook up with you can trigger these\nswarms from all sorts of places for\nexample maybe whenever a new row appears\nin Google Sheets that triggers a brand\nnew set of agents or maybe you want to\ndo something every time you get an email\nor every time a new file pops up in\nDrive or even when you embed Lindy's\npopup or chatbot on your website it's\nall possible they're saying that's their\nbiggest update yet and from how it\nbehaves you can see why the entire\nsystem is basically a divide and conquer\napproach where the cost and time go down\nbecause you're splitting tasks into\nparallel agents rather than one single\nagent that would take forever if it had\nto do everything sequentially now the\ncost question is always interesting\nlindy does have a free plan so you can\ntry it out right away without paying\nthen if you want to keep using it or\nscale it up the first paid tier is\napparently $50 a month there's also a\n7-day free trial if you want to check\nout all its features and if you're not a\nfan you can cancel before the trial ends\nfrom what I've seen though once you\nrealize how easy it is to build\nworkflows and have the AI do half your\nroutine tasks paying the subscription\ncan feel pretty justified they've also\ngot a credit system inside Lindy so\nyou'll see how many AI calls you've used\nup the more tasks you run the more\ncredits you'll burn so it pays to keep\nan eye on your usage but if you're just\nautomating daily tasks you can usually\nstay within a reasonable limit youtuber\ndemonstrated how to embed Lindy on a\nwebsite for customer support you\nbasically go into Lindy's templates pick\nthe website customer support workflow\ncopy the embed code and paste it into\nyour site be that WordPress Elementor or\nyour custom page the AI can then respond\nto visitors in real time using any\nknowledge base you feed it so if you add\nyour site's domain the tool can index\nyour pages and pick up details about\nyour product your pricing or anything\nelse then it can answer user questions\nall day and if you want to brand the\nchat widget with your logo or your brand\ncolors that's just a quick edit in the\nLindy interface it's basically a noode\napproach that would normally require a\nbunch of custom coding or a chain of\ncomplicated steps in other platforms\nanother scenario is email automation\nwhich is personally my favorite you can\nset up a flow so that whenever you\nreceive an email Lindy either drafts or\nsends an autoresponse that alone can\nsave a boatload of time if you're\njuggling a big inbox what's even more\npowerful is you can include filters like\nif the email has attachments or if\ncertain keywords are present then have\nthe AI parse that email figure out how\nto reply and either send it directly or\njust store a draft for you to edit one\nuser tested this by hooking up Lindy to\ntheir email so as soon as an incoming\nmessage arrived Lindy generated a\nresponse if the user wanted to see it\nfirst they set it to draft mode and if\nthey were confident in the automation\nthey'd just send it automatically people\nare also talking about hooking up phone\ncalls and SMS technically Lindy can\nhandle those triggers as well imagine\nauto SMS outreach or even placing phone\ncalls with Twilio integrated behind the\nscenes the point is you set up one or\ntwo steps specify how the AI should\nrespond to a call or a text and then let\nLindy run it if you want to do something\nlike personalizing lead genen messages\nyou can have a swarm churn out say 200\ndifferent texts with each containing\nrelevant info about the prospect maybe\nyou want to talk about their company's\nmost recent funding announcement or\nmaybe you want to reference their last\nproduct release the AI can do all that\nin a matter of seconds one of the\ncoolest things about Lindy is how it\nblends a chat style interface with a\npowerful workflow builder kind of like\nZapier but with way more brains you can\nset up triggers like when I get an email\nand have the AI read it understand the\nmessage and fire off a custom reply\nusing GPT4 whatever model you prefer and\nwith agent swarms everything happens at\nonce perfect for things like turning\nYouTube videos into blog posts doing\ncompetitive research prepping for\nmeetings or drafting a ton of outreach\nemails it's $50 a month after the free\ntrial and honestly if it saves you a few\nhours a week it pays for itself plus\nthere's a solid community where you can\ngrab templates get support and even\nembed AI agents on your\nsite all right like I mentioned in\nprevious videos we're getting ready to\nlaunch a free course on generative AI\nand avatars along with a free newsletter\nfull of useful updates you just need to\nsubscribe once using the link in the\ndescription it's totally free but spots\nare limited so make sure to grab yours\nwhile you\ncan that's it for this one hope you\nenjoyed it if you haven't already hit\nthat subscribe button thanks for\nwatching and I'll see you in the next\nvideo",
            "this was my startup team in\n2024 we were nine people in total but\nthis year we only four people\nleft I replaced more than half of my\nteam with AI agents and in this video\nI'll show you how you can create your\nown AI startup team yes you can do this\nwithout riding code every business is\ngoing to have a um an AI agent that\ntheir customers can talk to agents will\nbegin to deliver on hype I got to tell\nyou K opportunity for agents is gigantic\nas we AI agents are AI systems that can\ndo work for hundreds of millions of\nbillions of different AI agents billions\nof different AI agents whether you think\nthis is good or bad AI agents are here\nand you can be certain that they're here\nto stay millions of jobs worldwide will\nsoon be replaced by AI agents and\nthousands of tech companies and small\nstartups will reduce their headcount and\ntheir dependency on human labor it's\nvery likely that startup Founders just\nlike myself can go back to basics and\nbecome a solopreneur running everything\nas a oneman business without reducing\nthe output and without losing revenue\nand for you the upcoming founder who\nwants to run a SAS business but is\nblocked by the sheer thought of having\nto manage a team this is incredible news\nwe're still very early so don't miss out\non this opportunity let's get ready cuz\nwe have work to do in this video I will\nshow you step by step how you can create\na fine-tuned specialized AI model how\nyou can use it as an AI agent and how to\nmake it collaborate with other AI agents\non your team let's get started one area\nof work I replaced with AI is content\ncreation I used to have people help me\nwrite content for social media for my\nweekly SAS newsletter and my YouTube\nscripts so in this video we'll set up an\nAI agent that creates content for social\nmedia though the process I'll\ndemonstrate here can be used for almost\nany type of task you typically run into\non a startup team fortunately open AI\nhas made this incredibly easy for us we\ncan just ask chat GPT to generate some\ncontent\nright hey chat GPT can you create a\nbanger post about SAS and\nEntrepreneurship for me please sure how\nabout this exciting times in the world\nof SAS and Entrepreneurship every day\npresents new opportunities to innovate\nand lead in this dynamic\nindustry uh that's no that's not\nsomething I would post uh try again\nplease okay how about this feeling\ngrateful for the amazing journey of SAS\nand Entrepreneurship here's to more\ncoffee fueled brainstorms and chasing\ndreams that's really tacky and lame and\nwhat's up with all the Emojis no all\nright all right I got you leveraging and\nutilizing synergies in the existing\nrealm of SX you know what thank you this\nis not going to work so it turns out we\ncannot just ask chat gbt to create\ncontent for us and expect it to create\nanything of good quality and many people\nwho try this will stop here they'll\nconclude that AI is bad it's generic\npoor completely lacking substance and so\non but let's just back up for a second\nand compare this to hiring a new\nemployee If you hired a Content writer\nand you gave them no onboarding access\nto no brand guidelines no initial\ninstructions and just ask them to create\na post about some topic how do you think\nthey do do you think you would magically\nbe happy with their first result or\nwould you expect them to First learn\nabout your brand your core values your\nstyle of writing and the history of your\ncompany and then start delivering good\nresults cuz that's exactly what we need\nto do to prepare our AI agent now I've\nseen many different approaches to this a\ncommon method is including examples and\ninstructions in the system prompt or the\nfirst message of the conversation it\nrarely produces good results that's why\nmost of the custom gbts suck cuz that's\nexactly what they are it's just a chat\ngbt with some instruction in a system\nprompt injected into the chat before the\nconversation starts these are not AI\nagents even though some people\nincorrectly call them that we need to\nfine tune a\nmodel in essence instead of explaining\nwhat the AI should do we will show it a\nwhole bunch of examples of what an out\noutut should look like fine-tuning an AI\nmodel is the process of specializing an\nAI by training it on specific data so in\nthis case we will prepare examples of\nsocial media content it can be your own\ncontent it can also be content from\nother creators that you really like we\nshould put together 20 to 50 good\nexamples now for each of them we need to\nreverse engineer The Prompt so take this\npost and imagine chat GPT generated this\nwhat would the prompt have looked like\nprobably something like\nthis perfect we need to repeat this for\nall examples if you want to save some\ntime you can actually ask chat gbt to\nreverse engineer the promps for you in\nmost cases it actually does quite\nwell now let's head over to platform.\nopen.com and sign in with your chat DPG\naccount click fine tuning in the left\nside menu and click create\nthis is where we create our fine-tuning\njob but before we can upload our\ntraining data we need to turn it into\nthis specific format called Json L it's\nJson and it's one example per line if\nyou're a programmer you can write a\nquick script to automate this if you\ndon't know what Json is just follow my\nlead here for each example we need one\nline on this specific format we have a\nfield called messages which is a list\nthat has two messages one from the user\nthat will be our\n[Music]\nprompt and one from the assistant which\nwould be the reply from the\nAI if you want to include the line\nbreaks as part of the data you just need\nto use back\nsln there we\ngo once we have all our training data in\na Json L file we just need to upload\nit choose the base model I recommend\nusing gbt\n40 and that's it we can leave everything\nelse as is and click\ncreate now open AI will start training\nyour custom\nmodel once it's ready we can go to the\nplayground and try it out\nso let's try again create a post about\nSAS and\nEntrepreneurship okay let me see I was\nfailing SAS until I finally understood\nthis your team should be remote you\nshould work async taking VC money is\nyour best\nbet awesome that sounds exactly like my\nway of writing love it wait a minute\nwell what was that last line taking VC\nmoney is your best bet no no we can't\nhave that I'm all about bootst startups\nso we can't have that thing with VC\nmoney ah okay got it got it how about\nthis one I was failing SAS until I\nfinally understood this the easiest way\nto create a bootstrap sass is using\nCloud tools like versel or netfi no no\nno absolutely\nnot you sound like me okay but you're\nsaying things I would never say and this\nis our next problem now we have a fine-\ntuned model that has learned to adopt a\nspecific writing style but it's not\nreally that valuable if it doesn't know\nwhat our brand is all about it needs to\nknow which core beliefs and opinions to\nadopt which common themes can be found\nin our content which hot takes to drop\nand which values to align with and this\nis not exactly something we can find you\nin our way out of instead we're going to\ndo exactly what we would do with regular\nemployees we should write a brand brief\nin plain English this brand brief should\nprovide clear writing guidelines\ndescribe Our Brands in terms of core\nvalues content themes and objectives\ndislikes and opponents Associated\nproducts and services and other areas of\nour brand write this in a text file\nnotion page a Google doc or whatever you\nprefer if you've never done this before\nor you haven't really thought about your\npersonal brand in this way I actually\nthink it's a great exercise to spend\nsome time writing all of this down but\nagain if you want to save some time you\ncan have chat GPT do this too simply\ntake all of the training data you used\nto find through your model in the\nprevious step upload it to chat GPT\ndirectly and ask it to create a brand\nbrief given these posts then edit it to\nyour liking and simply use that for now\nI've written my brand brief in text file\nand if we head back over to the\nplayground we can now upload this file\nIsland ask or fine-tuned model to use\nthis brand brief as a base for creating\nour\nposts I have to say this is really good\ncontent no one likes a feature creature\nhow did you come up with that well I\nguess I learned from the best\nah I think you will fit in very well on\nthis team though not going to lie it's a\nlittle bit timec consuming to have to\nask you to write every single post can't\nyou work a little a little bit more\nautonomously I would love to Simon but\nI'm just an AI model I can't do anything\non my own initiative or make any active\ndecisions all I can do is answer you\nwhen you ask me for something so far\nwe've solved two major shortcomings of\nthe normal chat gbt we fine- tuned a\nmodel to write in a specific way and we\ntaught it about our brand to understand\nwhat we're all about it now knows what\nto say and how to say it but it's still\nnot an AI agent it doesn't do anything\non its own and it doesn't make any\ndecisions to be fair at this stage is\nstill very useful I've been using this\nexact setup for a long time and it has\nbeen tremendously helpful but it's also\nbeen very timec consuming chatting with\nmy fine tuned model refining giving it\nfeedback copy-pasting the results into\nfeed hiive my social media tool and so\non so at some point I got this idea what\nif I created a small team of AIS and\ngave them the agency to collaborate with\nother and push the final results into\nfeed hiive all by themselves we can do\nbetter how about an engaging\nquestion we should also use a more\nconsistent tone of\nvoice here's how it would work we want\none AI agent to generate topic\nideas we want another agent to create a\npost from one of these topics we want a\nthird agent to check the quality of the\npost and give feedback to the second\nagent the second agent will use the\nfeedback to refine and improve the\npost these two agents will go back and\nforth for a bit until they agree that\nthe post aligns with the brand uses the\nright tone of voice and is of high\nquality then finally push the post to\nfeed High where it shows up under my\ndrafts let's set this up for this we\nneed a tool called\nn8n n8n is an automation tool in the\nsame family as sapure and make but just\nway way better you can sign up and use\nNN in the cloud but you can also install\nit locally or selfhosted which gives you\nunlimited workflow runs totally free of\ncharge let's set this up in nadn Click\ncreate and then choose\ncredential here you need to add the\ncredentials to the apps you want nadn to\naccess such as notion Google Docs open\nAi and so on you will at the very least\nneed to give nadn access to open AI by\nadding an API key there are many Guides\nOnline on how to do this so moving\nforward I will assume that you have set\nup credentials for all the apps you need\nso now that we have that done let's\nstart cooking we'll start from the\nsmallest task and work back up in the NN\ndashboard create a new workflow let's\ncall it brand\nbrief add First Step since this is going\nto be a subtask we will use when called\nby another workflow I have my brand\nbrief in notion so let's add a notion\nnode we want to get all child\nblocks and add the URL to the notion\nPage hit test\nstep there we go now because notion\noutputs a page in blocks we want to\naggregate at the parts we need so let's\ndrag in an aggregate\nnode what we're interested in is the\ncontent\nFields there we go we now have a simple\nlist of individual pieces of text so\nlet's add an edit Fields\nnode drag in our content list we want\nthe final output to be one piece of text\nso we'll change this to string and after\ncontent we'll simply write do\njoin and there we go this workflow is\ndone let's move on create\nnew call it get content ideas once again\nuse when called by another workflow\nnow in order to get ideas we first need\nthe brand brief so we'll use a call\nanother workflow\nstep and we'll choose the brand brief\nworkflow we just\ncreated let's rename this to get brand\nbrief awesome next let's add a simple\nopen AI note called messageer\nmodel for this task we can simply choose\nGPT 40 Mini\nin the text field give the model a\nprompt that describes what it's supposed\nto do we'll tell it to create 10 topic\nsuggestions that aligns with the\nprovided brand brief we'll tell it to\nuse a Json output format like this and\nwe'll provide the brand brief from the\nstep\nbefore enable output content as Json\nlet's try it\nout that's perfect and also here let's\nadd an edit note and let's map this over\nto a simple list called\nsuggestions like\nthat let's move on to the next\nworkflow we call this get content\nfeedback it's similar to the workflow we\njust did so let's set up the execute\nworkflow trigger and the get brand brief\nnotes\njust like before this workflow is a\nlittle different since it will take some\nincoming data namely the post to give\nfeedback on so let's double click on the\nfirst node click set mock data then add\nsome data like\nthis\nperfect and also here we want a node\nfrom open AI that messages a\nmodel and also here we can choose gbt 4\nmini this time we want to give the AI\nsome rules to follow so let's change\nthis first message to the type\nsystem the role of this AI is to give\nfeedback and ensure the quality of a\npost is good so we will simply give it\nsome criteria to\nfollow of course you should adjust this\nto fit your specific\nbrand the most important part here is to\nhave the model give a score between Z\nand one and show it in the Json format\nwe want to use for the\noutput let's make sure to include the\nbrand\nbrief and this time we want to add\nanother message with the role\nuser and this will simply be the query\nfrom the first\nstep also here we want to Output as\nJson and let's test\nit perfect and yeah since this is just a\nmock input I'd expect the score to be\npretty low here so that seems to work\nfinally also here let's make sure to\nsimplify the output a\nbit there we go now we got everything we\nneed let's put the whole thing together\nI'll show you how to do this but if you\nwant to download and import all of these\nworkflows directly into your own nadn I\nwill share access to these files with\nmembers of Founders dech I'll tell you\nmore about this towards the end of the\nvideo create a new workflow let's let's\ncall it content\ncreator for now the first step will be\non chat message but we'll change that in\na bit the next node will be an AI\n[Music]\nagent now we need to give this AI agent\nthree things a model memory and tools\nfor the model we'll use open AI\n[Music]\nand because we linked our open AI\naccount we have access to the fine-tuned\nmodel we created\nearlier for the memory let's just use\nwindow\nbuffer now we need to give this agent\nsome tools these tools are going to be\nthe workflows we already created so\nlet's pick NAD and\nworkflow let's give the tool a name get\nbrand\nbrief let's describe\nand pick the workflow from the\nlist we'll add the feedback tool in the\nvery same\nway there we\ngo awesome now let's double click the AI\nagent we need to give this agent a\ndescription of its main\nobjective so we'll use system message\nand we'll give it a description similar\nto this\na quick explanation of how we want it to\nwork how to use the tools we provided\nand which final output we\nexpect now let's hit chat and try it\nout all right and we can see that the\nmodels start\ncollaborating going back and forth and\nthere we go look at that really cool at\nthis point the basic AI agent\nfunctionality is pretty much done the\nagent has access to a fine tun model it\nhas access to the tools it needs to\naccess the brand brief and get feedback\nand because it's an agent it figures out\nwhen and how to use these tools\ncorrectly given its task description\nthis right here is an actual AI agent\nlet's finish up since we want the output\nof this AI agent to be passed onto\nanother tool in my case feed hiive We'll\nadd an HTTP request node here\nin feed hiive under automation we can\ncreate a new\ntrigger I'll call this AI content and\npre-select a few social\naccounts I'll grab the URL from\nhere and add it to\nnadn we don't have images in this\nworkflow so I'll remove the media url's\npart and for the text I'll grab the\noutput from the AI agent agent and\nsimply add it here now every time the\nagent finishes a post it'll add it\ndirectly to feed hiive where I can\nschedule it to go\nout and instead of this chat message\ninput let's use the content idea task we\ncreated we'll replace this with trigger\nmanually We'll add a call another\nworkflow\nnode choose get content ideas from the\nlist there we go now let's add a split\nout\nnode drag in the suggestions from the\nidea\nstep now let's add a loop to Loop over\neach\nitem awesome now for each of the\nsuggestions that was generated we'll\ntrigger the AI agent flow but because\nthe AI agent expects an AI chat input we\njust need to add a temporary step here\nso once again edit fields\nthis time let's use\nJson and we want an object that looks\nlike\nthis for the session ID we use an\ninbuilt variable called item\nindex the action should just be send\nmessage and the chat input will be the\nsuggestion we got from the idea\ngeneration\nstep perfect we can feed this directly\ninto the AI\nagent and after each Lube is done we\nneed to make sure to go all the way back\nto continue with the next item which is\nthe next\nidea now all we have to do is Click test\nworkflow and see the whole thing in\naction the AI agents will start\nworking and a bit of back and\nforth and finally off to feed five where\nthe post will appear under\ndrafts highquality posts that are on\nbrand using the right topics and using\nthe right style of riding fully\nautomated isn't that just\nawesome also in case you didn't know\nfeed hiive which is the social media\nmanagement tool I used here is one of\nthe sad products my team and I run and\nif you think all of this looked way too\noverwhelming and complex feed hiive\nactually has a lightweight version of\nthis exact flow built-in you can write\nyour posts ask feed's AI to give it a\ngrade and it will give you feedback and\nsuggest changes to make your post better\nto it's not using a fine-tuned model\ntrained on your specific content so it's\nnot as good as a custom setup like the\none we built here but it's pretty solid\nand a very userfriendly experience you\ncan get lifetime access to feed hiive as\nwell as three other tools my team and I\nrun for a single onetime purchase they\nall come with apis and automation\nthey're all AI agent compatible go to\nfounder stack. proo to check it out I'll\nleave a link in the description now I\nknow I ran through some of this pretty\nfast but I have put the full workflows\ntogether for you to easily import into\nyour own NN account and a step-by-step\ntutorial on how to set this up in an\nocean\ndock if you are a Founder stack member\nyou can go and access this right away I\nhave left the link in the description\nbelow all you have to do is enter the\nemail you used to buy founder stack and\nyou'll get access to this immediately if\nyou want a more slow paced technical\nintroduction to n8n just Search Here on\nYouTube there are many excellent videos\nfrom creators showing you how to build\nall kinds of cool automation with these\nagents now I picked one example for this\nvideo which is content creation but\nthrough this I'm using similar workflows\nfor a whole range of different tasks I\nhope you got inspired thanks for\nwatching"
        ],
        "topicId": "67f0d0dba46d6510df4f60af",
        "userId": "67f01cf683c66e4badc7244f",
        "_id": "67f145e547dec64e2af9669f",
        "createdAt": "2025-04-05T15:01:57.812Z",
        "updatedAt": "2025-04-05T15:01:57.812Z",
        "__v": 0
    },
    "results": [
        {
            "url": "https://www.youtube.com/watch?v=YCS3HsFTbTQ",
            "status": "success"
        },
        {
            "url": "https://www.youtube.com/watch?v=DQtkOTThq5g",
            "status": "success"
        },
        {
            "url": "https://www.youtube.com/watch?v=Hm0DZtiKUI8",
            "status": "success"
        }
    ]
}